{"ast":null,"code":"const dividirCircunferencia = (r, x, y) => {\n  let puntos = [];\n  const radio = r; // Radio de la circunferencia\n  const centroX = x; // Coordenada x del centro de la circunferencia\n  const centroY = y; // Coordenada y del centro de la circunferencia\n  for (let i = 0; i < 12; i++) {\n    const angulo = Math.PI / 6 * i; // Ángulo en radianes (360° / 12 puntos = 30°)\n\n    // Calcular las coordenadas (x, y) del punto utilizando seno y coseno\n    const x = centroX + radio * Math.cos(angulo);\n    const y = centroY + radio * Math.sin(angulo);\n    puntos.push({\n      x,\n      y\n    });\n  }\n  puntos = rotarPuntos(puntos);\n  return puntos;\n};\nfunction rotarPuntos(puntos) {\n  let puntosNuevo = [];\n  puntosNuevo[0] = puntos[10];\n  puntosNuevo[1] = puntos[11];\n  puntosNuevo[2] = puntos[0];\n  puntosNuevo[3] = puntos[1];\n  puntosNuevo[4] = puntos[2];\n  puntosNuevo[5] = puntos[3];\n  puntosNuevo[6] = puntos[4];\n  puntosNuevo[7] = puntos[5];\n  puntosNuevo[8] = puntos[2];\n  puntosNuevo[9] = puntos[2];\n  console.log(puntosNuevo);\n  return puntosNuevo;\n}\n;\nexport default dividirCircunferencia;","map":{"version":3,"names":["dividirCircunferencia","r","x","y","puntos","radio","centroX","centroY","i","angulo","Math","PI","cos","sin","push","rotarPuntos","puntosNuevo","console","log"],"sources":["/home/javierfili/Desktop/ProyectorPersonales/frontend/paraPortafolio/relojdigital/src/pages/analogico/DividirEnDoce.tsx"],"sourcesContent":["interface Punto {\n  x: number;\n  y: number;\n}\nconst dividirCircunferencia = (r: number, x: number, y: number): Punto[] => {\n  let puntos: Punto[] = [];\n  const radio = r; // Radio de la circunferencia\n  const centroX = x; // Coordenada x del centro de la circunferencia\n  const centroY = y; // Coordenada y del centro de la circunferencia\n  for (let i = 0; i < 12; i++) {\n    const angulo = (Math.PI / 6) * i; // Ángulo en radianes (360° / 12 puntos = 30°)\n\n    // Calcular las coordenadas (x, y) del punto utilizando seno y coseno\n    const x = centroX + radio * Math.cos(angulo);\n    const y = centroY + radio * Math.sin(angulo);\n\n    puntos.push({ x, y });\n  }\n  puntos = rotarPuntos(puntos);\n  return puntos;\n};\n\nfunction rotarPuntos(puntos: Punto[]) {\n  let puntosNuevo: Punto[] = [];\n  puntosNuevo[0] = puntos[10];\n  puntosNuevo[1] = puntos[11];\n  puntosNuevo[2] = puntos[0];\n  puntosNuevo[3] = puntos[1];\n  puntosNuevo[4] = puntos[2];\n  puntosNuevo[5] = puntos[3];\n  puntosNuevo[6] = puntos[4];\n  puntosNuevo[7] = puntos[5];\n  puntosNuevo[8] = puntos[2];\n  puntosNuevo[9] = puntos[2];\n\n  console.log(puntosNuevo);\n  return puntosNuevo;\n};\n\nexport default dividirCircunferencia;\n"],"mappings":"AAIA,MAAMA,qBAAqB,GAAGA,CAACC,CAAS,EAAEC,CAAS,EAAEC,CAAS,KAAc;EAC1E,IAAIC,MAAe,GAAG,EAAE;EACxB,MAAMC,KAAK,GAAGJ,CAAC,CAAC,CAAC;EACjB,MAAMK,OAAO,GAAGJ,CAAC,CAAC,CAAC;EACnB,MAAMK,OAAO,GAAGJ,CAAC,CAAC,CAAC;EACnB,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;IAC3B,MAAMC,MAAM,GAAIC,IAAI,CAACC,EAAE,GAAG,CAAC,GAAIH,CAAC,CAAC,CAAC;;IAElC;IACA,MAAMN,CAAC,GAAGI,OAAO,GAAGD,KAAK,GAAGK,IAAI,CAACE,GAAG,CAACH,MAAM,CAAC;IAC5C,MAAMN,CAAC,GAAGI,OAAO,GAAGF,KAAK,GAAGK,IAAI,CAACG,GAAG,CAACJ,MAAM,CAAC;IAE5CL,MAAM,CAACU,IAAI,CAAC;MAAEZ,CAAC;MAAEC;IAAE,CAAC,CAAC;EACvB;EACAC,MAAM,GAAGW,WAAW,CAACX,MAAM,CAAC;EAC5B,OAAOA,MAAM;AACf,CAAC;AAED,SAASW,WAAWA,CAACX,MAAe,EAAE;EACpC,IAAIY,WAAoB,GAAG,EAAE;EAC7BA,WAAW,CAAC,CAAC,CAAC,GAAGZ,MAAM,CAAC,EAAE,CAAC;EAC3BY,WAAW,CAAC,CAAC,CAAC,GAAGZ,MAAM,CAAC,EAAE,CAAC;EAC3BY,WAAW,CAAC,CAAC,CAAC,GAAGZ,MAAM,CAAC,CAAC,CAAC;EAC1BY,WAAW,CAAC,CAAC,CAAC,GAAGZ,MAAM,CAAC,CAAC,CAAC;EAC1BY,WAAW,CAAC,CAAC,CAAC,GAAGZ,MAAM,CAAC,CAAC,CAAC;EAC1BY,WAAW,CAAC,CAAC,CAAC,GAAGZ,MAAM,CAAC,CAAC,CAAC;EAC1BY,WAAW,CAAC,CAAC,CAAC,GAAGZ,MAAM,CAAC,CAAC,CAAC;EAC1BY,WAAW,CAAC,CAAC,CAAC,GAAGZ,MAAM,CAAC,CAAC,CAAC;EAC1BY,WAAW,CAAC,CAAC,CAAC,GAAGZ,MAAM,CAAC,CAAC,CAAC;EAC1BY,WAAW,CAAC,CAAC,CAAC,GAAGZ,MAAM,CAAC,CAAC,CAAC;EAE1Ba,OAAO,CAACC,GAAG,CAACF,WAAW,CAAC;EACxB,OAAOA,WAAW;AACpB;AAAC;AAED,eAAehB,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}