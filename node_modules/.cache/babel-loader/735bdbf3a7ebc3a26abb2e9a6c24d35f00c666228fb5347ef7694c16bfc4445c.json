{"ast":null,"code":"const dividirCircunferencia = (r, x, y) => {\n  const puntos = [];\n  const radio = r; // Radio de la circunferencia\n  const centroX = x; // Coordenada x del centro de la circunferencia\n  const centroY = y; // Coordenada y del centro de la circunferencia\n  const iterador = 3;\n  for (let i = 0; i < 12; i++) {\n    const angulo = Math.PI / 6 * i; // Ángulo en radianes (360° / 12 puntos = 30°)\n\n    // Calcular las coordenadas (x, y) del punto utilizando seno y coseno\n    const x = centroX + radio * Math.cos(angulo);\n    const y = centroY + radio * Math.sin(angulo);\n    puntos.push({\n      x,\n      y,\n      iterador\n    });\n    puntos.sort((a, b) => {\n      return a.y - b.y;\n    });\n  }\n  return puntos;\n};\nexport default dividirCircunferencia;","map":{"version":3,"names":["dividirCircunferencia","r","x","y","puntos","radio","centroX","centroY","iterador","i","angulo","Math","PI","cos","sin","push","sort","a","b"],"sources":["/home/javierfili/Desktop/ProyectorPersonales/frontend/paraPortafolio/relojdigital/src/pages/analogico/DividirEnDoce.tsx"],"sourcesContent":["interface Punto {\n  x: number;\n  y: number;\n}\n\nconst dividirCircunferencia = (r: number, x: number, y: number): Punto[] => {\n  const puntos: Punto[] = [];\n  const radio = r; // Radio de la circunferencia\n  const centroX = x; // Coordenada x del centro de la circunferencia\n  const centroY = y; // Coordenada y del centro de la circunferencia\n  const iterador = 3;\n  for (let i = 0; i < 12; i++) {\n    const angulo = (Math.PI / 6) * i; // Ángulo en radianes (360° / 12 puntos = 30°)\n\n    // Calcular las coordenadas (x, y) del punto utilizando seno y coseno\n    const x = centroX + radio * Math.cos(angulo);\n    const y = centroY + radio * Math.sin(angulo);\n\n    puntos.push({ x, y,iterador });\n    puntos.sort((a: Punto, b: Punto) => {\n      return a.y - b.y;\n    });\n  }\n\n  return puntos;\n};\n\nexport default dividirCircunferencia;\n"],"mappings":"AAKA,MAAMA,qBAAqB,GAAGA,CAACC,CAAS,EAAEC,CAAS,EAAEC,CAAS,KAAc;EAC1E,MAAMC,MAAe,GAAG,EAAE;EAC1B,MAAMC,KAAK,GAAGJ,CAAC,CAAC,CAAC;EACjB,MAAMK,OAAO,GAAGJ,CAAC,CAAC,CAAC;EACnB,MAAMK,OAAO,GAAGJ,CAAC,CAAC,CAAC;EACnB,MAAMK,QAAQ,GAAG,CAAC;EAClB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;IAC3B,MAAMC,MAAM,GAAIC,IAAI,CAACC,EAAE,GAAG,CAAC,GAAIH,CAAC,CAAC,CAAC;;IAElC;IACA,MAAMP,CAAC,GAAGI,OAAO,GAAGD,KAAK,GAAGM,IAAI,CAACE,GAAG,CAACH,MAAM,CAAC;IAC5C,MAAMP,CAAC,GAAGI,OAAO,GAAGF,KAAK,GAAGM,IAAI,CAACG,GAAG,CAACJ,MAAM,CAAC;IAE5CN,MAAM,CAACW,IAAI,CAAC;MAAEb,CAAC;MAAEC,CAAC;MAACK;IAAS,CAAC,CAAC;IAC9BJ,MAAM,CAACY,IAAI,CAAC,CAACC,CAAQ,EAAEC,CAAQ,KAAK;MAClC,OAAOD,CAAC,CAACd,CAAC,GAAGe,CAAC,CAACf,CAAC;IAClB,CAAC,CAAC;EACJ;EAEA,OAAOC,MAAM;AACf,CAAC;AAED,eAAeJ,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}