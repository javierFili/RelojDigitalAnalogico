{"ast":null,"code":"function dividirEnSesenta(r,x,y){let puntos=[];const radio=r;// Radio de la circunferencia\nconst centroX=x;// Coordenada x del centro de la circunferencia\nconst centroY=y;// Coordenada y del centro de la circunferencia\nfor(let i=0;i<60;i++){const angulo=Math.PI/30*i;// Ángulo en radianes (360° / 12 puntos = 30°)\n// Calcular las coordenadas (x, y) del punto utilizando seno y coseno\nconst x=centroX+radio*Math.cos(angulo);const y=centroY+radio*Math.sin(angulo);puntos.push({x,y});}puntos=rotarPuntos(puntos);return puntos;}function rotarPuntos(puntos){let puntosNuevo=[];let j=0;for(let i=46;i<60;i++){puntosNuevo[j]=puntos[i];j++;}for(let i=0;i<46;i++){puntosNuevo[j]=puntos[i];j++;}return puntosNuevo;}export default dividirEnSesenta;","map":{"version":3,"names":["dividirEnSesenta","r","x","y","puntos","radio","centroX","centroY","i","angulo","Math","PI","cos","sin","push","rotarPuntos","puntosNuevo","j"],"sources":["/home/javierfili/Desktop/ProyectorPersonales/frontend/paraPortafolio/relojdigital/src/pages/analogico/DividirEnSesenta.tsx"],"sourcesContent":["interface Punto {\n  x: number;\n  y: number;\n}\nfunction dividirEnSesenta(r: number, x: number, y: number) {\n  let puntos: Punto[] = [];\n  const radio = r; // Radio de la circunferencia\n  const centroX = x; // Coordenada x del centro de la circunferencia\n  const centroY = y; // Coordenada y del centro de la circunferencia\n  for (let i = 0; i < 60; i++) {\n    const angulo = (Math.PI / 30) * i; // Ángulo en radianes (360° / 12 puntos = 30°)\n\n    // Calcular las coordenadas (x, y) del punto utilizando seno y coseno\n    const x = centroX + radio * Math.cos(angulo);\n    const y = centroY + radio * Math.sin(angulo);\n\n    puntos.push({ x, y });\n  }\n  puntos = rotarPuntos(puntos);\n  return puntos;\n}\n\nfunction rotarPuntos(puntos: Punto[]) {\n  let puntosNuevo: Punto[] = [];\n  let j = 0;\n  for (let i = 46; i < 60; i++) {\n    puntosNuevo[j] = puntos[i];\n    j++;\n  }\n  for (let i = 0; i < 46; i++) {\n    puntosNuevo[j] = puntos[i];\n    j++;\n  }\n  return puntosNuevo;\n}\nexport default dividirEnSesenta;\n"],"mappings":"AAIA,QAAS,CAAAA,gBAAgBA,CAACC,CAAS,CAAEC,CAAS,CAAEC,CAAS,CAAE,CACzD,GAAI,CAAAC,MAAe,CAAG,EAAE,CACxB,KAAM,CAAAC,KAAK,CAAGJ,CAAC,CAAE;AACjB,KAAM,CAAAK,OAAO,CAAGJ,CAAC,CAAE;AACnB,KAAM,CAAAK,OAAO,CAAGJ,CAAC,CAAE;AACnB,IAAK,GAAI,CAAAK,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAG,EAAE,CAAEA,CAAC,EAAE,CAAE,CAC3B,KAAM,CAAAC,MAAM,CAAIC,IAAI,CAACC,EAAE,CAAG,EAAE,CAAIH,CAAC,CAAE;AAEnC;AACA,KAAM,CAAAN,CAAC,CAAGI,OAAO,CAAGD,KAAK,CAAGK,IAAI,CAACE,GAAG,CAACH,MAAM,CAAC,CAC5C,KAAM,CAAAN,CAAC,CAAGI,OAAO,CAAGF,KAAK,CAAGK,IAAI,CAACG,GAAG,CAACJ,MAAM,CAAC,CAE5CL,MAAM,CAACU,IAAI,CAAC,CAAEZ,CAAC,CAAEC,CAAE,CAAC,CAAC,CACvB,CACAC,MAAM,CAAGW,WAAW,CAACX,MAAM,CAAC,CAC5B,MAAO,CAAAA,MAAM,CACf,CAEA,QAAS,CAAAW,WAAWA,CAACX,MAAe,CAAE,CACpC,GAAI,CAAAY,WAAoB,CAAG,EAAE,CAC7B,GAAI,CAAAC,CAAC,CAAG,CAAC,CACT,IAAK,GAAI,CAAAT,CAAC,CAAG,EAAE,CAAEA,CAAC,CAAG,EAAE,CAAEA,CAAC,EAAE,CAAE,CAC5BQ,WAAW,CAACC,CAAC,CAAC,CAAGb,MAAM,CAACI,CAAC,CAAC,CAC1BS,CAAC,EAAE,CACL,CACA,IAAK,GAAI,CAAAT,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAG,EAAE,CAAEA,CAAC,EAAE,CAAE,CAC3BQ,WAAW,CAACC,CAAC,CAAC,CAAGb,MAAM,CAACI,CAAC,CAAC,CAC1BS,CAAC,EAAE,CACL,CACA,MAAO,CAAAD,WAAW,CACpB,CACA,cAAe,CAAAhB,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}